CREATE TABLE movie_log(MOVIE_ID STRING,MOVIE_TITLE STRING,USER_ID STRING,RA
TINGS FLOAT,GENRE_ID STRING,RECOMMENDED STRING,ACTIVITY INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' STORED AS TEXTFILE;

LOAD DATA LOCAL INPATH 'Dataset5.csv' INTO TABLE movie_log;

SELECT USER_ID,MOVIE_ID,ACTIVITY,CASE WHEN RECOMMENDED = 'Y' THEN 1 ELSE 0
END AS RECOMMEND_INT FROM movie_log WHERE ACTIVITY IN (4,5,2,1) AND GENRE_ID IS NOT NULL LIMIT 25;




WITH MostRecentRatings AS (
    SELECT 
        USER_ID, 
        MOVIE_ID, 
        MOVIE_TITLE, 
        RATINGS, 
        RECOMMENDED, 
        ROW_NUMBER() OVER (PARTITION BY MOVIE_ID ORDER BY USER_ID) AS rn 
    FROM movie_log 
    WHERE RATINGS IS NOT NULL
) 
SELECT 
    USER_ID, 
    MOVIE_ID, 
    MOVIE_TITLE, 
    CASE 
        WHEN RECOMMENDED = 'Y' THEN 1 
        WHEN RECOMMENDED = 'N' THEN 0 
        ELSE NULL 
    END AS RECOMMENDED_INT, 
    RATINGS AS most_recent_rating 
FROM MostRecentRatings 
WHERE rn = 1 
LIMIT 5;




# BigData
# Hadoop MapReduce Record Count

This repository demonstrates how to compile and run a Hadoop MapReduce job to count records in a CSV file.

## Prerequisites

Ensure you have the following installed and configured:
- Java Development Kit (JDK)
- Hadoop
- A Hadoop cluster or a local Hadoop setup

## Setup and Execution

 Create a Directory

First, create a directory to store compiled Java classes:

```
mkdir folder
```
### 2.Compile the Java Code
```
javac -classpath $(hadoop classpath) -d folder RecordCountMapper.java RecordCountReducer.java RecordCount.java
```
 
### 3.Package into a JAR File



 ```
jar -cvf recordcount.jar -C folder/ .
 ```

### 4.Prepare HDFS
 
 ```
hdfs dfs -mkdir input
 ```

### 5.Upload your CSV dataset to the HDFS input directory:
 ```
 
hdfs dfs -put dataset124.csv /input/data.csv
 ```
 

### 6.Run the MapReduce job using the JAR file:

 
 ```
yarn jar recordcount.jar (<packagename>).RecordCount /input /output
 ``` 

### 7.Display the contents of the output file:

 
 ```
hdfs dfs -ls /output
hdfs dfs -cat /output/part-r-00000
 ```
